ggplot(mpg) + aes(displ, hwy, colour = class) +
geom_point() + geom_rug() + geom_smooth(aes(displ,hwy, colour = NULL))
install.packages()
install.packages("ggplot2")
library(ggplot2)
?mpg
ggplot(mpg) + aes(displ, hwy) + geom_point(alpha = 0.5)
ggplot(mpg) + aes(displ, hwy,size=cty) + geom_point(alpha = 0.5)
ggplot(mpg) + aes(displ, hwy,size=cty,colour=class) + geom_point()
ggplot(mpg) + aes(displ, hwy,colour=class) + geom_point() + geom_rug()
ggplot(mpg) + aes(displ, hwy, colour = class) +
geom_point() + geom_rug() + geom_smooth(aes(displ,hwy, colour = NULL))
?mpg
ggplot(mpg) + aes(class) + geom_bar()
?mpg
gplot(mpg) + aes(class) + geom_bar()
ggplot(mpg) + aes(class) + geom_bar()
ggplot(mpg) + aes(class,fill = fl)+geom_bar()
ggplot(mpg) + aes(x = "", fill = class) + geom_bar() + coord_polar("y")
library(readxl)
people <-read_excel("people.xlsx")
people <-read_excel("C:/Users/Asus/Downloads/people.xlsx")
people
people <-read_excel("people.xlsx", sheet= 2, range= "A5:F15")
people
incidents <-read_excel("C:/Users/Asus/Desktop/L5 Sem1/Data vis/incidents (1).xlsx")
incidents
people <-read_excel("C:/Users/Asus/Downloads/people.xlsx")
people
incidents <-read_excel("C:/Users/Asus/Desktop/L5 Sem1/Data vis/incidents (1).xlsx")
incidents
incidents <-read_excel("C:/Users/Asus/Downloads/incidents (1).xlsx")
incidents
incidents <-read_excel("C:/Users/Asus/Downloads/incidents (1).xlsx")
incidents
library(readxl)
incidents <-read_excel("C:/Users/Asus/Downloads/incidents (1).xlsx")
incidents
table1
setwd("C:/Users/Asus/Downloads/Data vis CW documents")
movies <- read.csv("movies.csv",header = TRUE ,sep = ",")
library(ggplot2)
ggplot(movies) + aes(Imdb_genre) + geom_bar() + labs(x="IMDB_genre",y="count",title="movies by genre") + theme_minimal()
set.seed(2)
sampleMovies<-movies[sample(nrow(movies),40),]
ggplot(sampleMovies) + geom_histogram(aes(IMDB.Rating),binwidth = 0.4,fill = "#69b3a2") + labs(x="IMDB.Rating",y="count",title="Ratings of movies") + theme_minimal()
ggplot(sampleMovies) + geom_boxplot(aes(x = Box.Office.Collection)) + labs(title="box office collection") + theme_minimal()
ggplot(sampleMovies) + ( aes(x=Box.Office.Collection)) +
geom_density(fill="#69b3a2", color="#e9ecef", alpha=0.8) + labs(x="box office collection",y="count",title="distribution of the box office collection") + theme_minimal()
ggplot(sampleMovies) + ( aes(x=IMDB.Rating)) +
geom_density(fill="#69b3a2", color="#e9ecef", alpha=0.8) + labs(x="imdb rating",y="count",title="distribution of the imdb ratings") + theme_minimal()
ggplot(movies) + aes(Year, Votes) + geom_point(alpha = 0.5) + stat_cor(method = "pearson") + labs(x="year",y="votes",title="year in relation to votes") + theme_minimal()
library(ggpubr)
ggplot(movies) + aes(Year, Votes) + geom_point(alpha = 0.5) + stat_cor(method = "pearson") + labs(x="year",y="votes",title="year in relation to votes") + theme_minimal()
ggplot(movies) + geom_point(alpha = 0.5) + aes(IMDB.Rating, Votes) + stat_cor(method = "pearson") + theme_minimal()
ggplot(movies) + aes(IMDB.Rating, Box.Office.Collection) + geom_point(alpha = 0.5) + stat_cor(method = "pearson") + theme_minimal()
ggplot(movies) + aes(Year, IMDB.Rating) + geom_point(alpha = 0.5) + stat_cor(method = "pearson") + theme_minimal()
ggplot(movies) + aes(IMDB.Rating,Votes, colour = metascore, shape = Imdb_genre) + geom_jitter() + theme_minimal()
ggplot(movies) + aes(Box.Office.Collection,IMDB.Rating ,colour = Imdb_genre) + geom_point(alpha = 0.5) + theme_minimal()
ggplot(movies) + aes(Box.Office.Collection,IMDB.Rating ,colour = Imdb_genre) + geom_point(alpha = 0.5) + facet_wrap(~ Imdb_genre, nrow = 2)
ggplot(movies) + aes(Box.Office.Collection,IMDB.Rating ,colour = Imdb_genre) + geom_point(alpha = 0.5) + theme_minimal()
ggplot(movies) + aes(Box.Office.Collection, IMDB.Rating, color = Imdb_genre) + geom_line() + theme_minimal()
ggplot(movies) + aes(Imdb_genre,Box.Office.Collection) + geom_boxplot() + theme_minimal()
library(dplyr)
set.seed(2)
#Creating the object average box office per genre from the movies dataset and finds the average for all the randomly selected movies.
average_box_office_per_genre <- movies %>%
group_by(Imdb_genre) %>%
sample_n(5, replace = FALSE) %>% # Randomly sample 5 movies per genre
summarise(Average_Collection = mean(Box.Office.Collection, na.rm = TRUE))
print(average_box_office_per_genre)
ggplot(average_box_office_per_genre) + aes(Imdb_genre,Average_Collection) + geom_bar(fill= "#52a8c7") + labs(title="box office collection by genre") + theme_minimal()
ggplot(average_box_office_per_genre) +
geom_bar(aes(x =Imdb_genre , y = Average_Collection), stat = "identity", fill = "skyblue", color = "black") +
labs(title = "Average Box Office Collection by Genre",
x = "Genre",
y = "Average Box Office Collection") + theme_minimal()
ggplot(movies) + aes(Imdb_genre,Box.Office.Collection) + geom_boxplot() + theme_minimal()
